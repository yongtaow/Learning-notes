CSS学习笔记
一、开始学习CSS，为网页添加样式
1.认识CSS样式
CSS全称为“层叠样式表”，它主要是用于定义HTML内容在浏览器内的显示样式，如文字大小、颜色、字
体加粗等。
如下列代码：
p{
	font-size:12px;
	color:red;
	font-weight:bold;
}
使用CSS样式的一个好处是通过定义某个样式，可以让不同网页位置的文字有统一的字体、字号或者颜色等。

2.CSS样式的优势
为什么使用css样式来设置网页的外观样式呢？右边编辑器是一段文字，我们想把“超酷的互联网”、“服
务及时贴心”、“有趣易学”这三个短语的文本颜色设置为红色，这时就 可以通过设置样式来设置，而且只
需要编写一条css样式语句。
第一步：把这三个短语用<span></span>括起来。
第二步：写入下列代码：
span{
	color:red;
}

3.CSS代码语法
css样式由选择符和声明组成，而声明又由属性和值组成。
例如：
p{color:blue}
选择符：又称选择起，指明网页中要应用样式规则的元素，如本例中是网页中所有的段(p)的文字将变成蓝
色，而其他元素(如ol)不会受影响。
声明：在英文大括号“{}”中的就是声明，属性和值之间用英文冒号“:”分隔。当有多条声明时。中间可以
用英文分号“;”分隔，如下所示：
p{font-size:12px;color:red;}
注意：
(1)最后一条声明可以没有分号，但是为了以后修改方便，一般也加上分号。
(2)为了使用样式更加容易阅读，可以将代码写在一个新行内，如下所示：
p{
	font-size:12px;
	color:red;
}

4.CSS注释代码
用/*注释语句*/

二、CSS样式基本知识
1.内联式css样式，直接写在现有的HTML标签中
CSS样式可以写在哪些地方呢？从CSS样式代码插入的形式来看基本可以分为一下3种：内联式、嵌入式和外部式三种。
内联式 css样式表就是把css代码直接写在现有的HTML标签中，如下面代码：
<p style="color:red">这里的文字是红色。</p>
注意要写在元素的开始标签里，下面这种写法是错误的：
<p>这里的文字是红色。</p style="color:red">
并且css样式代码要写在style=""双引号中，如果有多天css样式代码设置可以写在一起，中间用分号隔开。
如下代码：
<p style="color:red;font-size:12px">这里文字时红色。</p>

2.嵌入式css样式，写在当前的文件中
嵌入式css样式，就是可以把css样式代码写在<style type="text/css"></style>标签之间。如下面把
<span>标签中的文字设置为红色：
<style type="text/css">
span{
	color:red;
}
</style>
嵌入式css样式必须写在<style></style>之间，并且一般情况下嵌入式css样式写在<head></head>之间。

3.外部式css样式，写在单独的一个文件中
外部式css样式（也称为外联式）就是把css代码写在一个单独的外部文件中，这个css样式文件以".css"为拓展名
，在<head>内（不是在<style>标签内）使用<link>标签将css样式文件链接到html文件内，如下代码：
<link href="base.css" rel="stylesheet" type="text/css" />\
注意：
(1)css样式文件名称以有意义的英文字母命名
(2)rel="stylesheet" type="text/css"是固定写法不可修改。
(3)<link>标签位置一般在<head>标签之内。

4.三种方法的优先级
如果有一种情况：对于同一个元素我们同时用了三种方法设置css样式，那么哪种方法真正有效呢？
三种样式是有优先级的，记住他们的优先级：内联式 > 嵌入式 > 外部式
但是嵌入式>外部式有一个前提：嵌入式css样式的位置一定在外部式的后面。如右代码编辑器就是这样，
<link href="style.css" ...>代码在<style type="text/css">...</style>代码的前面（实际开发中也是这么写的）。
感兴趣的小伙伴可以试一下，把它们调换顺序，再看他们的优先级是否变化。
其实总结来说，就是--就近原则（离被设置元素越近优先级别越高）。

三、CSS选择器
1.什么是选择器？
每一条css样式声明（定义）由两部分组成，形式如下：
选择器｛
    样式;
｝
在{} 的部分就是“选择器”，“选择器”指明了{}中的“样式”的作用对象，也就是“样式”作用于网页中的哪些元素。

2.标签选择器
标签选择器其实就是html代码中的标签。如<html>,<body>,<h1>,<p>。
例如下面代码：
p{font-size:12px;line-height:1.6em;}

3.类选择器
类选择器在css样式编码中是最常用到的。
语法：
.类选择器名称{css样式代码;}
注意：
(1)英文圆点开头
(2)其中类选择器名称可以任意起名
使用方法：
第一步：使用合适的标签把要修改的内容标记起来，如下：
<span>胆小如鼠</span>
第二步:使用class="类选择器名称"为标签设置一个类，如下：
<span class="stress">胆小如鼠</span>
第三部：设置类选择器css样式，如下：
.stress{color:red;}

4.ID选择器
在很多方面，ID选择器都类似于类选择器，但也有一些重要的区别：
(1)为标签设置id="ID名称"，而不是class="类名称"。
(2)ID选择器的前面是井号（#）号，而不是英文圆点（.）

5.类和ID选择器的区别
相同点：可以应用于任何元素
不同点：
(1)ID选择器只能在文档中使用一次。与类选择器不同，在一个HTML文档中，ID选择器只能使用一次，而且仅
一次，而类选择器可以使用多次。
下面代码是正确的：
<p>三年级是，我还是一个<span class="stress">胆小如鼠</span>的小女孩，上课从来不敢回答老师提出的
问题，生怕回答错了老师会批评我。就一直没有这个<span class="stress">勇气</span>来回答老师提出的问题。
</p>
下面代码是错误的：
<p>三年级是，我还是一个<span id="stress">胆小如鼠</span>的小女孩，上课从来不敢回答老师提出的
问题，生怕回答错了老师会批评我。就一直没有这个<span id="stress">勇气</span>来回答老师提出的问题。
</p>
(2)可以使用类选择器词列表方法为一个元素同时设置多个样式。我们可以为一个元素同时设多个样式，但只
可以用类选择器的方法实现，ID选择器是不可以的（不能使用 ID 词列表）。
下面的代码是正确的
.stress{
    color:red;
}
.bigsize{
    font-size:25px;
}
<p>到了<span class="stress bigsize">三年级</span>下学期时，我们班上了一节公开课...</p>
上面代码的作用是为“三年级”三个文字设置文本颜色为红色并且字号为25px。
下面的代码是不正确的
#stressid{
    color:red;
}
#bigsizeid{
    font-size:25px;
}
<p>到了<span id="stressid bigsizeid">三年级</span>下学期时，我们班上了一节公开课...</p>
上面代码不可以实现为“三年级”三个文字设置文本颜色为红色并且字号为25px的作用。

6.子选择器
一个比较有用的选择器子选择器，即大于符号（>），用于选择指定标签元素的第一代子元素。
代码：
.food>li{border:1px solid red;}
<ul class="food">
    <li>水果
        <ul>
        	<li>香蕉</li>
            <li>苹果</li>
            <li>梨</li>
        </ul>
    </li>
    <li>蔬菜
    	<ul>
        	<li>白菜</li>
            <li>油菜</li>
            <li>卷心菜</li>
        </ul>
    </li>
</ul>
会使class名为food下的子元素li（水果、蔬菜）加入红色实线边框。

7.包含（后代）选择器
包含选择器，即加入空格，用于选择指定标签元素下的后辈元素，
.food li{border:1px solid red}
<ul class="food">
    <li>水果
        <ul>
        	<li>香蕉</li>
            <li>苹果</li>
            <li>梨</li>
        </ul>
    </li>
    <li>蔬菜
    	<ul>
        	<li>白菜</li>
            <li>油菜</li>
            <li>卷心菜</li>
        </ul>
    </li>
</ul>
会死class名为food下的所有子元素li加入红色实线边框。

8.通用选择器
通用选择器是功能最强大的选择器，它使用一个（*）号指定，它的作用是匹配html中的所有标签元素，如
下使用下面代码使用html中任意标签元素字体颜色全部设置为红色：
*{color:red;}

9.伪类选择符
伪类选择符，它允许给html不存在的标签（标签的某种状态）设置样式，比如说我们给html中一个标签元素
的鼠标滑过的状态来设置字体颜色：
a:hover{color:red;}
上面一行代码就是为a标签鼠标滑过的状态设置字体颜色变红。
关于伪类选择符：
关于伪类选择符，到目前为止，可以兼容所有浏鉴器的“伪类选择符”就是 a 标签上使用 :hover 了（其实
伪类选择符还有很多，尤其是 css3 中，但是因为不能兼容所有浏览器，本教程只是讲了这一种最常用的）。
其实 :hover 可以放在任意的标签上，比如说 p:hover，但是它们的兼容性也是很不好的，所以现在比较常
用的还是 a:hover 的组合。

10.分组选择符
当想为html中多个标签元素设置同一个样式时，可以使用分组选择符（,），如下代码为h1,span标签同时
设置字体颜色为红色：
h1,span{color:red;}
它相当于下面两行代码：
h1{color:red;}
span{color:red;}

四、CSS的继承、层叠和特殊性
1.继承
CSS的某些样式时具有继承性的，那么什么是继承呢？继承是一种规则，它允许样式不仅应用与某个特定的html
标签，而且应用于其后代。比如下面代码：某种颜色应用于p标签，这个颜色设置不仅应用p标签，还应用于p标签
中的所有子元素文本。
p{color:red;}
<p>三年级时，我还是一个<span>胆小如鼠</span>的小女孩。</p>
但是有一些css样式时不具有继承性的。如border:1px solid red;
p{border:1px solid red}
<p>三年级时，我还是一个<span>胆小如鼠</span>的小女孩。</p>
上面代码的作用只是给p标签设置了边框为1像素、红色、实心边框线，而对于子元素span是没有起到作用的。

2.特殊性
有时候我们为同一个元素设置了不同的CSS样式代码，那么元素会启用哪一个CSS样式呢？我们来看下面的代码：
p{color:red;}
.first{color:green;}
<p class="first">三年级时，我还是一个<span>胆小如鼠</span>的小女孩。</p>
p和.frist都匹配到了p这个标签上，那么会显示哪种颜色呢？green是正确的颜色，那么为什么呢？因为浏览器是根据
权值来判断使用哪个css样式的，哪种权值高就用哪种css样式。
下面是权值的规则：
标签的权值为1，类选择符的权值为10，ID选择符的权值最高为100。例如下面的代码：
p{color:red;}/*权值为1*/
p span{color:green;}/*权值为1+1=2*/
.warning{color:white;}/*权值为10*/
p span .warning{color:purple;}/*权值为1+1+10=12*/
#footer .note p{color:yellow;}/*权值为100+10+1=111*/
注意：还有一个权值比较特殊--继承也有权值但很低，有的文献提出它只有0.1，所以可以理解为继承的权值最低。

3.层叠
思考一个问题：如果在html文件中对于同一个元素可以有多个css样式存在并且这多个css样式具有相同权值怎么办？
层叠就是在html文件中对于同一个元素可以有多个css样式存在，当有相同权重的样式存在是，会根据这些css样式
的前后顺序来决定，处于最后面的css样式会被应用。
如下代码：
p{color:red;}
p{color:green;}
<p class="first">三年级时，我还是一个<span>胆小如鼠</span>的小女孩。</p>
最后p中的文本会设置为green，这个层叠很好理解，理解为后面的样式会覆盖前面的样式。
所以css样式优先级就不难理解了：
内联样式表（标签内部）>嵌入样式表（当前文件）>外部样式表（外部文件中）。

4.重要性 !important
在做网页代码时，有些特殊情况需要为某些样式设置具有最高权值，这时可以使用!important来解决。
如下代码：
p{color:red !important;}
p{color:green;}
<p class="first">三年级时，我还是一个<span>胆小如鼠</span>的小女孩。</p>
这时p段落中的文本会显示red红色。
注意：!importan要写在分号的前面
这里注意当网页制作者不设置css样式时，浏览器会按照自己的一套样式来显示网页。并且用户也可以在浏览
器中设置自己习惯的样式，比如有的用户习惯把字号设置为大一些，使其查看网页的文本更加清楚。这时注
意样式优先级为：浏览器默认的样式 < 网页制作者样式 < 用户自己设置的样式，但记住!important优先级
样式是个例外，权值高于用户自己设置的样式。

五、CSS文字排版
1.文字排版-字体
我们可以使用css样式为网页中的文字设置字体、字号、颜色等样式属性。我们来看一个例子，下面代码实现：
为网页中的文字设置字体为宋体。
body{font-family:"宋体";}
注意：不要设置不常用的字体，因为如果用户本地电脑没有安装你设置的字体，就会显示浏览器默认的字体。
（因为用户是否可以看到你设置的字体样式取决于用户本地电脑上是否安装你设置的字体。）
现在一般网页喜欢设置“微软雅黑”，如下代码：
body{font-family:"Microsoft Yahei";}或body{font-family:"微软雅黑";}
注意：第一种方法比第二种方法兼容性更好一些。

2.文字排版-字号、颜色
可以使用下面代码设置网页中文字的字号为12像素，并把字体颜色设置为#666（灰色）：
body{font-size:12px;color:#666;}

3.文字排版-粗体
我们还可以使用css样式来改变文字的样式：粗体、斜体、下划线、删除线，可以使用下面代码实现设置文
字以粗体样式显示出来。
p span{font-weight:bold;}
如果想为文字设置粗体是有单独的css样式来实现的，再不用为了实现粗体样式而使用h1-h6或strong标签了。

4.文字排版-斜体
以下代码可以实现文字以斜体样式在浏览器中显示：
p a{font-style:italic;}
<p>三年级时，我还是一个<a>胆小如鼠</a>的小女孩。</p>

5.文字排版-下划线
有些情况下想问文字设置为下划线样式，这样可以在视觉上强调文字，可以使用下面代码来实现：
p a{text-decoration:underline;}

6.文字排版-删除线
如果想在网页上设置删除线怎么办，这个样式在电商网站上常会见到
下面的代码实现删除线：
.oldPrice{text-decoration:line-through;}

7.段落排版-缩进
中文文字中的段前习惯空两个文字的空白，这个特殊的样式可以用下面的代码实现：
p{text-indent:2em;}
<p>1922年的春天，一个想要成名名叫尼克卡拉威（托比?马奎尔Tobey Maguire 饰）的作家，离开了美
国中西部，来到了纽约。那是一个道德感渐失，爵士乐流行，走私为王，股票飞涨的时代。为了追寻他的美
国梦，他搬入纽约附近一海湾居住。</p>
注意：2em的意思就是文字的2倍大小。

8.段落排版-行间距（行高）
在段落排版中起到重要作用的行间距（行高）属性（line-height）,如下代码实现设置段落行间距为1.5倍。
p{line-height:1.5em;}

9.段落排版-中文字间距、字母间距
中文字间距、字母间距设置：
如果想在网页排版中设置文字间距或者字母间距就可以使用 letter-spacing来实现，如下面代码：
h1{letter-spacing:50px;}
单词间距设置：
如果想设置英文单词之间的间距呢？可以使用word-spacing来实现，如下代码：
h1{word-spacing:50px;}

10.段落排版-对齐
想为块状元素中的文字、图片设置居中样式，可以使用text-align样式代码，如下代码实现文本居中显示。
h1{text-align:center;}
同样可以设置居左：
h1{text-align:left;}
还可以设置居右:
h1{text-align:right;}

六、CSS盒模型
1.元素分类
在CSS中，html中的标签元素大体被分为三种不同的类型：块状元素、内联元素（又叫行内元素）和内联块状元素。
常见的块状元素有：
<div>,<p>,<hx>(x为1到6),<ol>,<ul>,<table>,<adress>,<blockquote>,<form>
常见的内联元素有：
<a>,<span>,<br>,<i>,<em>,<strong>,<label>,<q>,<var>,<cite>,<code>
常见的内联块状元素有：
<img>,<input>

2.元素分类-块级元素
在html中<div>,<p>,<h1>,<form>,<ul>和<li>就是块级元素。设置display:block就是将元素显示为
块级元素。如下代码就是将内联元素a转换为块级元素，从而使a元素具有块级元素的特点。
a{display:block;}
块级元素的特点：
(1)每个块级元素都从新的一行开始，而且其后的元素也另起一行。（一个块级元素独占一行）
(2)元素的高度、宽度、行高以及顶和底边距都可设置。
(3)元素宽度在不设置的情况下，是它本身父容器的100%（和父元素的宽度一致），除非设定一个宽度。

3.元素分类-内联元素
在html中，<span>、<a>、<label>、 <strong> 和<em>就是典型的内联元素（行内元素）（inline）
元素。当然块状元素也可以通过代码display:inline将元素设置为内联元素。如下代码就是将块状元素div转
换为内联元素，从而使 div 元素具有内联元素特点。
div{display:inline;}
内联元素特点：
(1)和其他元素都在一行上
(2)元素的高度、宽度及顶部和底部边距不可设置
(3)元素的宽度就是它包含的文字或图片的宽度，不可改变。
解决行内元素间隙bug问题
行内元素之间会产生间隙bug问题的场景：
(1)、当行内元素之间有“回车”、“tab”、“空格”时就会出现间隙。
如下代码：
<div>
   <a>1</a>
   <a>2</a>
   <span>33333</span>
   <span>44444</span>
   <em>555555</em>
</div>
解决方法：
 (1)、写在一行，之间不要有空格之类的符号。
<div>
<a>1</a><a>2</a><span>33333</span><span>44444</span><em>555555</em>
</div>
(2)、使用font-size:0
div{font-size:0;}
a,span,em{font-size:16px;}

4.元素分类-内联块状元素
内联块状元素（inline-block）就是同时具备内联元素、块状元素的特点，代码display:inline-block就是
将元素设置为内联块状元素。（css2.1新增），<img>,<input>标签就是这种内联块状标签。
inline-block元素特点：
(1)和其他元素都在一行上
(2)元素的高度、宽度、行高以及顶和底部边距都可设置

5.盒子模型

6.盒子模型-边框（一）
盒子模型的边框就是围绕着内容及补白的线，这条线你可以设置它的粗细、样式和颜色（边框的三个属性）。
如下面代码为div设置边框粗细为2px、样式为实心的、颜色为红色的边框：
div{border:2px solid red;}
上面是border代码的缩写形式，可以分开写：
div{
    border-width:2px;
    border-style:solid;
    border-color:red;
}
注意：
(1)border-style(边框样式)常见样式由：
dashed（虚线）| dotted（点线）| solid（实线）。
(2)border-color（边框颜色）中的颜色可设置为16进制颜色，如：
border-color:#888；
(3)border-width（边框宽度）中的宽度也可以设置为：
thin | medium | thick（但不是很常用），最常用的还是像素（px）

7.盒模型-边框（二）
现在有一个问题，如果想为p标签单独设置下边框，而其他三边都不设置边框样式怎么办？css样式中允许只为
一个方向的边框设置样式：
div{border-bottom:1px solid red;}
同时可以使用下面代码实现其他三边（上、右、左）边框的设置：
border-top:1px solid red;
border-right:1px solid red;
border-left:1px solid red;

8.盒模型-宽度和高度
盒模型宽度和高度和我们平常所说的物体的宽度和高度理解是不一样的，css内定义的宽（width）和高
（height），指的是填充以里的内容范围。
因此一个元素实际宽度（盒子的宽度）=左边界+左边框+左填充+内容宽度+右填充+右边框+右边界。

9.盒模型-填充
元素内容与边框之间是可以设置距离的，称为“填充”。填充也可分为上、右、下、左（顺时针）。如下代码：
div{padding:20px 10 px 15px 30px;}
顺序一定不要搞混。可以分开写上面的代码：
div{
    padding-top:20px;
    padding-right:10px;
    padding-bottom:15px;
    padding-left:30px;
}
如果上、右、下、左的填充都为10px，可以这么写：
div{padding:10px;}
如果上下填充一样为10px，左右一样为20px，可以这么写：
div{padding:10px 20px;}

10.盒模型-边界
元素与其他元素之间的距离可以使用边界（margin）来设置。边界也是分为上、右、下、左。如下代码：
div{margin:20px 10px 15px 30px;}
也可以分开写：
div{
    margin-top:20px;
    margin-right:10px;
    margin-bottom:15p;
    margin-left:30px;
}
如果上右下左的边界都为10px，可以这么写：
div{margin:10px;}
如果上下边界一样为10px，左右一样为20px，可以这么写：
div{margin:10px 20px;}
总结一下：padding和margin的区别，padding在边框里，margin在边框外。