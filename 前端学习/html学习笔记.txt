标签的语法：
标签由英文尖括号<和>栝起来。
html中的标签一般都是成对出现的，分开始标签和结束标签。结束标签比开始标签多一个/。
标签与标签之间是可以嵌套的，但先后顺序必须保持一致。
HTML标签不区分大小写，<h1>和<H1>是一样的，但建议小写，大部分程序员以小写为准。

1.html文件结构：
<html>
<head>...</head>
<body>...</body>
</html>

2.head标签：
<head>
<title>...</title>
<meta>
<link>
<style>...</style>
<script>...</script>
</head>

<title>标签：在<title>和</title>标签之间的文字内容是网页的标题信息，它会出现在浏览器的标题中。
例如：<title>Hello,world</title>

3.HTML的代码注释：
<!--注释文字 -->

4.body标签：
在网页上展现出来的页面内容一定要放在body标签中。

5.p标签：
把文章的段落放在<p>标签中。
语法：<p>段落文本</p>

6.<hx>标签:
文章的段落用<p>标签，那么文章的标题用<hx>标签
标题标签一共有6个，h1,h2,h3,h4,h5,h6分别为一级标题，二级标题，三级标题，四级标题，五级标题，
六级标题。并且依据重要性递减。
语法:<hx>标题文本</hx> (x 为 1-6)

7.<strong>和<em>标签：
如果在一段话中特别强调某几个文字，这个时候就可以用到<em>或<strong>标签。
但两者在强调的语气上有区别：<em>表示强调，<strong>表示更强烈的强调。并且在浏览器中<em>默认
用斜体表示，<strong>用斜体表示。目前国内前端程序员更喜欢使用<strong>表示强调。
语法：<em>需要强调的文本</em>
         <strong>需要强调的文本</strong>

8.<span>标签：
对<em>,<strong>,<span>这三个标签进行一下总结：
1.<em>和<strong>标签是为了强调一段话中的关键字时使用，它们的语意是强调。
2.<span>标签是没有语意的，它的作用就是为了设置单独的样式用的。
语法:<span>文本</span>

9.<q>标签：
短文本引用
语法：<q>引用文本</q>
引用的文本不用加双引号，浏览器会对q标签自动添加双引号。
它的语意：引用别人的话

10.<blockquote>标签，长文本引用：
<blockquote>的作用也是引用别人的文本，但他是对长文本的引用，如在文章中引入大段某知名作家的文字，
这时就需要这个标签。
<q>标签是对短文本的引用。比如说引用一句话就用到<q>标签。
例如：想在文章中引用李白《关山月》中的诗句，因为引用文本比较长，所以使用<blockquote>。
语法：<blockquote>引用文本</blockquote>
<blockquote>
明月出天山，苍茫云海间。长风几万里，吹度玉门关。
汉下白登道，胡窥青海湾。由来征战地，不见有人还。
 戍客望边色，思归多苦颜。高楼当此夜，叹息未应闲。
 </blockquote>
 
 11.<br>标签，分行显示文本：
 在需要加回车换行的地方加入<br />，<br ./>标签相当于word文档中的回车。
 语法：
 xhtml1.0写法：
 <br />
 html 4.0写法：
 <br>
 **大家注意，现在一般使用 xhtml1.0 的版本的写法（其它标签也是），这种版本比较规范。
与以前我们学过的标签不一样，<br />标签是一个空标签，没有HTML内容的标签就是空标签，空标签只
需要写一个开始标签，这样的标签有<br />、<hr />和<img />。
**在 html 中是忽略回车和空格的，你输入的再多回车和空格也是显示不出来的。

12.为网页中添加一些空格：
因为html代码是忽略回车和空格的，所以想要输入空格，必须写入 &nbsp;
语法：&nbsp;

13.<hr>标签，添加水平横线：
在信息展示时，有时会需要加一些用于分隔的横线，这样会使文章看起来整齐些。
语法：
html4.01版本 <hr>
xhtml1.0版本 <hr />
空标签只有一个开始标签没有结束标签。

14.<address>标签，添加地址信息：
一般网页中会有一些网站的联系地址信息需要在网页中展示出来，这些联系地址信息如公司的地址就可以使用
<address>标签。也可以定义一个地址（比如电子邮件地址）、签名或者文档的作者身份。
语法：
<address>联想地址信息</address>
如：
<address>文档编写：lilian 北京市西城区德外大街10号</address>
<address>标签在浏览器上显示的默认样式为斜体。

15.<code>标签，加入一行代码：
在介绍语言技术的网站中，避免不了在网页中显示一些计算机专业的编程代码，当代码为一行代码时，
你就可以使用<code>标签了，如下面例子：
<code>var i=i+300;</code>
注意：在文章中一般如果要插入多行代码时不能使用<code>标签了。
语法：
<code>代码语言</code>
注：如果是多行代码，可以使用<pre>标签。

16.<pre>标签，为网页加入大段代码：
语法：
<pre>语言代码段</pre>
<pre> 标签的主要作用:预格式化的文本。被包围在 pre 元素中的文本通常会保留空格和换行符。
如下代码：
<pre>
    var message="欢迎";
    for(var i=1;i<=10;i++)
    {
        alert(message);
    }
</pre>
注意：<pre> 标签不只是为显示计算机的源代码时用的，在你需要在网页中预显示格式时都可以使用它，
只是<pre>标签的一个常见应用就是用来展示计算机的源代码。

17.<ul>标签，无序列表：
在浏览网页时，你会发现网页上有很多信息的列表，如新闻列表、图片列表。
这些列表就可以使用ul-li标签来完成。ul-li是没有前后顺序的信息列表。
语法：
<ul>
  <li>信息</li>
  <li>信息</li>
   ......
</ul>
举例：
<ul>
  <li>精彩少年</li>
  <li>美丽突然出现</li>
  <li>触动心灵的旋律</li>
</ul>
ul-li在网页中显示的默认样式一般为：每项li前都自带一个圆点。

18.<ol>标签，有先后顺序的列表：
如果想在网页中展示有前后顺序的信息列表，怎么办呢？如，当当网上的书籍热卖排行榜。
就可以使用<ol>标签来制作有序列表来展示。
语法：
<ol>
   <li>信息</li>
   <li>信息</li>
   ......
</ol>
举例：
下面是一个热点课程下载排行榜：
<ol>
   <li>前端开发面试心法 </li>
   <li>零基础学习html</li>
   <li>JavaScript全攻略</li>
</ol>
<ol>在网页中显示的默认样式一般为：每项<li>前都自带一个序号，序号默认从1开始。

19.<div>标签，排版作用：
在网页制作过程过中，可以把一些独立的逻辑部分划分出来，放在一个<div>标签中，
这个<div>标签的作用就相当于一个容器。
语法：
<div>…</div>
确定逻辑部分：
什么是逻辑部分？它是页面上相互关联的一组元素。如网页中的独立的栏目版块，就是一个典型的逻辑部分。
 
 20.给<div>命名，使逻辑更加清晰：
 语法：
<div  id="版块名称">…</div>

21.<table>标签，网页上的表格：
创建表格的四个元素：
table,tbody,tr,th,td
(1).<table>...</table>:整个表格以<table>标记开始、</table>标记结束。
(2).<tbody>...</tbody>:当表格内容非常多时，表格会下载一点显示一点，但如果加上<tbody>标签后，
这个表格就要等表格内容全部下载完才会显示。
(3).<tr>...</tr>:表格的一行，所以有几对tr表格就有几行。
(4).<td>...</td>:表格的一个单元格，一行中包含几对<td>...</td>,说明一行中就有几列。
(5).<th>...</th>:表格的头部的一个单元格，表格表头。
(6).表格中列的个数，取决与一行中数据单元格的个数。
总结：
(1).table表格在没有添加css样式之前，在浏览器中显示是没有表格线的。
(2).表头，也就是th标签中的文本默认为粗体并且居中显示。

22.用css样式，为表格加入边框：
<style type="text/css">
table tr td,th{border:1px soild #000;}
</style>

23.<caption>标签，为表格添加标题和摘要：
摘要：
摘要的内容是不会在浏览器中显示出来的。它的作用是增加表格的可读性(语义化)，使搜索引擎更好的读懂
表格内容，还可以使屏幕阅读器更好的帮助特殊用户读取表格内容。
语法：
<table summary="表格简介文本">

标题：
用以描述表格内容，标题的显示位置：表格上方。
语法：
<table>
<caption>标题文本</caption>
<tr>
<td>...</td>
<td>...</td>
...
</tr>
</table>

24.<a>标签，链接到另一个页面：
使用<a>标签可实现超链接
语法：
<a href="目标网址" title="鼠标滑过显示的文本">链接显示的文字</a>
例如:
<a href="http://www.imooc.com" title="点击进入慕课网">click here!</a>
title属性的作用，鼠标滑过链接文字时会显示这个属性的文本内容。这个属性在实际网页开发中作用很大，
主要方便搜索引擎了解链接地址的内容（语义化更友好）。
注意：还有一个有趣的现象不知道小伙伴们发现了没有，只要为文本加入a标签后，文字的颜色就会自动变
为蓝色（被点击过的文本颜色为紫色）

<a>标签在默认情况下，链接的网页是在当前浏览器窗口中打开，有时我们需要在新的浏览器窗口中打开。
如下代码：
<a href="目标网址" target="_blank">click here!</a>

25.<img>标签，为网页插入图片：
在网页的制作中为使网页炫丽美观，肯定是缺少不了图片，可以使用<img>标签来插入图片。
语法：
<img src="图片地址" alt="下载失败时的替换文本" title="提示文字" />
举例：
<img src="myimage.gif" alt="My Image" title="My Image" />
src:标识图像的位置；
alt:当图像不可见时（下载不成功时），可看到该属性指定的文本；
title：提供在图像课件时对图像的描述（鼠标滑过图片时显示的文本）；
图像可以是GIF,PNG,JPEG格式的图像文件。

26.使用表单标签，与用户交互
网站怎样与用户进行交互？答案是使用HTML表单(form)。表单是可以把浏览者输入的数据传送到服务器端，
这样服务器端程序就可以处理表单传过来的数据。
语法：
<form method="传送方式" action="服务器文件">
(1).<form>:<form>标签是成对出现的，以<form>开始，以</form>结束。
(2).action:浏览器输入的数据被传送到的地方，比如一个PHP页面(save.php)。
(3).method:数据传送的方式(get/post)
<form method="post" action="save.php">
<lable for="username">用户名：</label>
<input type="text" name="username" />
<label for="pass">密码：</label>
<input type="password" name="pass" />
</form>
注意：
(1).所有表单控件（文本框，文本域，按钮，单选框，复选框等）都必须放在<form></form>标签之间
（否则用户输入的信息可提交不到服务器上哦！）。
(2).method:post/get的区别这一部分内容属于后端程序员考虑的问题。
method="get/post",两种方式的区别

Form中的get和post方法，在数据传输过程中分别对应了GET和POST方法。
二者主要区别如下：
1、Get将表单中数据的按照variable=value的形式，添加到action所指向的URL后面，并且两者使用“?”连接，
而各个变量之间使用“&”连接；Post是将表单中的数据放在form的数据体中，按照变量和值相对应的方式，
传递到action所指向URL。
如下形式：
     http://www.imooc.com/test.asp?name=lilian&password=12345678
2、Get是不安全的，因为在传输过程，数据被存放在请求的URL地址中，这样就可能会有一些隐私的信息被第三方看到。
3、Get方式传输的数据量非常小，一般限制在 2KB 左右，但是执行效率却比 Post 方法好；而 Post 方式
传递的数据量相对较大，它是等待服务器来读取数据，不过也有字节限制，这是为了避免对服务器用大量数据
进行恶意攻击，根据微软方面的说法，微软对用 Request.Form()可接收的最大数据有限制，IIS4中为 80KB
 字节，IIS5 中为 100KB 字节。
综上所述，请尽量用 Post 方法。

27.文本输入框，密码输入框：
语法：
<form>
<input type="text/password" name="名称" value="文本" />
</form>

(1).type:
当type="text"时，输入框为文本输入框；
当type="password"时，输入框为密码输入框。
2.name:为文本框命名，以备后台程序ASP、PHP使用。
3.value：为文本输入框设置默认值。（一般起到提示作用）
举例:
<form>
姓名：
<input type="text" name="myName" />
<br />
密码：
<input type="password" name="pass" />
</form>

28.文本域，支持多行文本输入
当用户需要在表单中输入大段文字时，需要用到文本输入域。
语法：
<textarea rows="行数" clos="列数">文本</textarea>
rows：多行输入域的列数。
cols：多行输入域的行数。
在<textarea></textarea>标签之间可以输入默认值。
举例：
<form method="post" action="save.php">
<label>联系我们</label>
<textarea cols="50" rows="10">在这里输入内容...</textarea>
</form>

29.使用单选框、复选框，让用户选择：
html中有两种选择框，即单选框和复选框，两者的区别时单选框中的选项用户只能选择一项，而复选框中用
户可以任意选择多项，甚至全选。
语法：
<input type="radio/checkbox" value="值" name="名称" checked="checked" />
(1).type="radio"时，控件为单选框
      type="checkbox"时，控件为复选框
(2).value:提交数据到服务器的值（后台程序使用）
(3).name:为控件命名，以备后台程序ASP,PHP使用。
(4).checked：当设置checked="checked"时，该选项被默认选中。
注意：同一组的单选按钮，name取值一定要一致，这样同一组的单选按钮才可以起到单选的作用。

30.使用下拉列表框，节省空间
代码：
<form name="iform">
<label>爱好：</label>
<select>
<option value="读书">读书</option>
<option value="运动">运动</option>
<option value="音乐">音乐</option>
<option value="旅游">旅游</option>
<option value="购物" selected="selected">购物</option>
</select>
</form>
(1).value:为向服务器提交的值，<option>...</option>之间的为显示的值
(2).selected="selected":
设置selected="selected"属性，则该选项就被默认选中。

31.使用下拉列表框进行多选
下拉列表也可以进行多选操作，在<select>标签中设置multiple="multiple"属性，就可以实现多选功能，
在windows系统下，进行多选时按下ctrl建同时单击（在mac下使用command+单击），可以选择多个选项。
代码：
<form name="iform">
<label>爱好：</label>
<select multiple="multiple">
<option value="读书">读书</option>
<option value="运动">运动</option>
<option value="音乐">音乐</option>
<option value="旅游">旅游</option>
<option value="购物">购物</option>
</select>
</form>

32.使用提交按钮，提交数据
在表单中有两种按钮可以使用，分别为:提交按钮、重置。当用户需要提交表单信息到服务器时，需要用到提交按钮。
语法：
<input type="submit" value="提交">
type:只有当type值设置为submit时，按钮才能有提交作用
value:按钮上显示的文字

33.使用重置按钮，重置表单信息
当用户需要重置表单信息到初始时的状态时，比如用户输入“用户名”后，发现书写有误，可以使用重置按
钮使输入框恢复到初始状态。只需要把type设置为"reset"就可以。
语法：
<input type="reset" value="重置">
type：只有当type值设置为reset时，按钮才有重置作用
value：按钮上显示的文字

34.form表单中的label标签：
label标签不会向用户呈现任何特殊效果，它的作用是为鼠标用户改进了可用性。如果你在 label 标签内点
击文本，就会触发此控件。就是说，当用户单击选中该label标签时，浏览器就会自动将焦点转到和标签相
关的表单控件上（就自动选中和该label标签相关连的表单控件上）。
语法：
<label for="控件id名称">
注意：标签的 for 属性中的值应当与相关控件的 id 属性值一定要相同。
例子：
<form>
  <label for="male">男</label>
  <input type="radio" name="gender" id="male" />
  <br />
  <label for="female">女</label>
  <input type="radio" name="gender" id="female" />
  <label for="email">输入你的邮箱地址</label>
  <input type="email" id="email" placeholder="Enter email">
</form>